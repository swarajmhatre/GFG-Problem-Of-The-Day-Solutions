-----------------------------------------------------------------------------------------------------------------------------------------------------------------------	
Problem Statement: 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

Flip Bits

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Solution: 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends


class Solution{
    public:
    int maxOnes(int a[], int n)
    {
        // Your code goes here
        int iCount =0;
        
        //Transform the array (0 int 1 and 1 ino -1)
        for(int i=0; i<n; i++){
            if(a[i]==0){
                a[i] =1;
            }
            else{
                iCount++;
                a[i] = -1;
            }
        }
        
        //sum denotes the total sum of elements in subarray ans answer notes the maximum sum(where the no of zeros in max)
        
        int sum =0, ans =0;
        
        //calculates sum and ans keeps the max sum count 
        //if(sum is less than 0, the sum is recaluculated)
        for(int i=0; i<n; i++){
            sum += a[i];
            ans = max(ans , sum);
            if(sum < 0)
            sum =0;
        }
        
        //iCount is added because when the 1- is added to the sum, it neutralizes one of the zeros
        // so the neutralized zero plus remaining ones
        return ans + iCount;
    }
};


//{ Driver Code Starts.
int main()
{
    int t; cin>>t;
    while(t--)
    {
        int n;
        cin>>n;
        int a[n+5];
        for(int i=0;i<n;i++)
            cin>>a[i];
        Solution ob;
        cout<< ob.maxOnes(a, n) <<endl;
    }
    return 0;
}

// } Driver Code Ends
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

