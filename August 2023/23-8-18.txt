-----------------------------------------------------------------------------------------------------------------------------------------------------------------------	
Problem Statement: 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

Leaders in an array

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Solution: 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

-------------------------O(n^2) TC--------------------------------------------
class Solution{
    //Function to find the leaders in the array.
    public:
    vector<int> leaders(int a[], int n){
        // Code here
        vector<int> ans;
        int j =0, i=0;
        for( i=0; i< n-1; i++){
            for( j =i+1; j<n; j++){
                if(a[i] < a[j]){
                    break;
                }
            }
            if(j == n){
                ans.push_back(a[i]);
            }
        }                
        ans.push_back(a[n-1]);
        return ans;
    }
};

-------------------------O(n) TC--------------------------------------------


class Solution{
    //Function to find the leaders in the array.
    public:
    vector<int> leaders(int a[], int n){
        // Code here
        vector<int> ans;
        int MAX = -1e9;
        for(int i =n-1; i>=0; i--){
            MAX = max(MAX, a[i]);
            if(a[i]>= MAX){
                ans.push_back(a[i]);
            }
        }
        reverse(ans.begin(), ans.end());
        return ans;
    }
};
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

