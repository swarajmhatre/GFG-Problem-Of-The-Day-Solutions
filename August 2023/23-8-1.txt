-----------------------------------------------------------------------------------------------------------------------------------------------------------------------	
Problem Statement: 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

You are given a connected undirected graph. Perform a Depth First Traversal of the graph.

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Solution: 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
class Solution {
  public:
    // Function to return a list containing the DFS traversal of the graph.
    
    void dfs(int node, vector<int> &ans, vector<bool> &visited, vector<int> adj[]){
        visited[node] = true;
        ans.push_back(node);
        
        for(auto x: adj[node]){
            if(!visited[x]){
                dfs(x, ans, visited, adj);
            }
        }
    }
    vector<int> dfsOfGraph(int V, vector<int> adj[]) {
        // Code here
        vector<int> ans;
        vector<bool> visited(V,false);
        
        for(int i=0; i<V; i++){
            if(!visited[i]){
                dfs(i,ans, visited, adj);
            }
        }
        return ans;
    }
};
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

